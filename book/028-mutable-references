// if we try to modify something weâ€™re borrowing: 
// cannot borrow `*some_string` as mutable, as it is behind a `&` reference
// fn main(){
//     let s1 = String::from("Hello");
//     change(&s1);
// }

// fn change(some_string: &String){
//     some_string.push_str(", world");
// }




fn main(){
    let mut  s1 = String::from("Hello");
    change(&mut s1);
}

fn change(some_string: &mut String){
    some_string.push_str(", world");
}
